# Unified Service Account and RBAC Configuration
# Works for both Kubernetes and OpenShift
# OpenShift-specific parts are marked with comments

apiVersion: v1
kind: ServiceAccount
metadata:
  name: spark-sa
  namespace: dev-spark-operator
  labels:
    app: spark-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spark-role
  namespace: dev-spark
rules:
- apiGroups: [""]
  resources: ["pods", "services", "services/finalizers" ,"configmaps", "secrets", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spark-role-binding
  namespace: dev-spark
subjects:
- kind: ServiceAccount
  name: spark-sa
  namespace: dev-spark
roleRef:
  kind: Role
  name: spark-role
  apiGroup: rbac.authorization.k8s.io
---
# OpenShift-specific: Add SCC to service account
# This section is only needed for OpenShift deployments
# For Kubernetes-only deployments, you can comment out or remove this section
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spark-scc-binding
  # OpenShift-specific annotation
  annotations:
    platform: "openshift"
subjects:
- kind: ServiceAccount
  name: spark-sa
  namespace: dev-spark
roleRef:
  kind: ClusterRole
  name: system:openshift:scc:spark-scc
  apiGroup: rbac.authorization.k8s.io
